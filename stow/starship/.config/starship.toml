format = """
[‚îå‚îÄ](#ffffff)$shlvl$username$hostname$directory$git_branch$git_status$git_commit$custom$go$python$cmd_duration$memory_usage$battery$status$time
[‚îî‚îÄ](#ffffff)$character"""

# Disable the blank line at the start of the prompt
# add_newline = false

# Wait 10 milliseconds for starship to check files under the current directory.
scan_timeout = 10

[character]
#success_symbol = "[‚ùØ‚ùØ‚ùØ](bold white) "
#error_symbol =   "[‚ùØ‚ùØ‚ùØ](bold red) "
# some variants  ÔÅî  ‚û§ ÔòΩ
success_symbol = "[‚û§ ](#50fa7b) "
error_symbol =   "[‚û§ ](#ff5555) "

[shell]
disabled = false

[shlvl]
disabled = false
format = " [ÔÅ£ Lv.$shlvl ](bold white)"
threshold = 2

[username]
disabled = true
show_always = true
style_user ="#50fa7b" 
style_root = "#ff5555"
format = "[ÔÄá $user]($style)"

[hostname]
style = "#8be9fd"
ssh_only = false
format =  "[ÔåÉ]($style)[ $hostname](#ffffff) "
trim_at = ".companyname.com"
disabled = false

[directory]
style = "bold #bd93f9"
read_only_style = "#ff5555"
fish_style_pwd_dir_length = 3
format = "[$read_only]($read_only_style)[Óóæ ]($style)[$path](#ffffff) "
truncation_length = 4 
truncation_symbol = ".../"
read_only = "ÔÄ£ "

[git_status]
conflicted = "ÔÅ± "
untracked  = "Ôºü"
stashed    = "Ôä® "
modified   = "ÔÅÄ "
staged     = "ÔÅß "
renamed    = "ÔÄ´ "
deleted    = "‚úò "
style = "#ffb86c"
ahead = "‚ñ≤ ${count}"
behind = "‚ñº ${count}"
diverged = "‚ñ≤ ${ahead_count} ‚ñº ${behind_count}"

[git_branch]
style = "bold underline #bd93f9"

[cmd_duration]
format = "[ÔÄó $duration](bold white)"

[time]
disabled = true
format = '[ÓéÑ $time](underline white) '
time_format = "%T"
utc_time_offset = "+9"

[status]
style = "#ff5555"
symbol = "ÓûÄ "
not_executable_symbol = "üö´"
not_found_symbol = "ÔÅô "
sigint_symbol = "ÓûÄ "
signal_symbol = "ÓûÄ "
format = ' [\[$symbol$common_meaning$signal_name$maybe_int\]]($style) '
map_symbol = true
disabled = false

[memory_usage]
disabled = true
threshold = -1
symbol = " "
style = "bold underline white"

[[battery.display]]
threshold = 10
style = "bold #ff5555"

[python]
style = "bold #50fa7b"
symbol = "Óàµ "
format = '[${symbol}${pyenv_prefix}(${version} )(\($virtualenv\) )]($style)'

[custom.git_remote_url]
description = 'Remote git repository'
when = 'git rev-parse --is-inside-work-tree'
command = """
GIT_REMOTE=$(command git ls-remote --get-url 2> /dev/null)
GIT_REMOTE_URL=$(echo $GIT_REMOTE | sed -E 's/^https?:\\/\\/(.+@)?//; s/\\.git$//; s/.+@(.*):(.*)$/\\1\\/\\2/; s/\\/$//')
if [[ "$GIT_REMOTE" =~ "github" ]]; then
    GIT_REMOTE_SYMBOL="Ôêà "
elif [[ "$GIT_REMOTE" =~ "gitlab" ]]; then
    GIT_REMOTE_SYMBOL="Ôäñ "
elif [[ "$GIT_REMOTE" =~ "bitbucket" ]]; then
    GIT_REMOTE_SYMBOL="ÔÖ± "
elif [[ -n "$GIT_REMOTE" ]]; then
    GIT_REMOTE_SYMBOL="Ôû° "
else
    GIT_REMOTE_SYMBOL="Ôáí "
fi
echo "$GIT_REMOTE_SYMBOL$GIT_REMOTE_URL"
"""
# Default format is according to the segmented-brackets preset (https://github.com/starship/starship/pull/2747)
format = '\[[$output]($style)\]'
# If you prefer the default Starship style, use the following
# format = "at [$output]($style)"
shell = ["bash", "--noprofile", "--norc"]
style = 'blue'

# Using a custom format to highlight current non-system python in a compact manner
# - üêç: python from virtual env is active
# - ü¶é: python from pyenv is active
[custom.py]
command = """ pv=$(python --version | grep -Eo "\\d+\\.\\d+"); if [ -n "$VIRTUAL_ENV" ]; then echo "$pv"; else echo "$pv"; fi """
style = "blue"
when = """ [[ -n "$VIRTUAL_ENV" || $PATH =~ /pyenv/ ]] """
shell = ["bash", "--noprofile", "--norc"]
